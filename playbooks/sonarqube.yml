---
- hosts: localhost
  become: yes
  become_method: sudo
  tasks:
    - name: Update repositories
      apt:
        update_cache: yes

    - name: Install Java
      package: name='openjdk-8-jre' state=latest

    - name: Install Postgres
      apt:
        name: postgresql
        update_cache: yes
        state: latest

    - name: Add Sonar user to postgres
      command: createuser sonar
      become: true
      become_user: postgres
      ignore_errors: yes

    - name: Add sonar user password
      command: psql -c "ALTER USER sonar WITH ENCRYPTED password 'password';"
      become: true
      become_user: postgres

    - name: Create database
      command: psql -c "CREATE DATABASE sonar OWNER sonar;"
      become: true
      become_user: postgres
      ignore_errors: yes

    - name: Add sonar user and install Sonarqube
      user:
        name: sonar
        shell: /bin/bash

    - name: Get SonarQube
      get_url: 
        url="https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-6.7.6.zip"
        dest="/tmp/sonarqube-6.7.6.zip"

    - name: Unzip sonarqube 
      ansible.builtin.unarchive:
        src: /tmp/sonarqube-6.7.6.zip
        dest: /tmp
        remote_src: yes

    - name: Copy the files 
      ansible.builtin.copy:
        src: /tmp/sonarqube-6.7.6 
        dest: /opt
        remote_src: yes

    - name: Give ownership to the sonar user
      command: sudo chown -R sonar:sonar /opt/sonarqube-6.7.6

    - name: Add RUN_AS_USER
      lineinfile: 
        path: /opt/sonarqube-6.7.6/bin/linux-x86-64/sonar.sh
        state: present
        line: RUN_AS_USER=sonar

    - name: Add properties
      blockinfile:
        path: /opt/sonarqube-6.7.6/conf/sonar.properties
        block: |
          sonar.jdbc.username=sonar
          sonar.jdbc.password=password
          sonar.jdbc.url=jdbc:postgresql://localhost/sonar
          sonar.web.host=127.0.0.1
          sonar.search.javaOpts=-Xms512m  -Xmx512m

    - name: Create systemd service file
      ansible.builtin.copy:
        src: sonar
        dest: /etc/init.d/sonar
        remote_src: no

    - name: Give ownership to the sonar user
      command: sudo chown -R root:root /etc/init.d/sonar

    - name: Fix the permissions
      command: sudo chmod u=rwx,g=rx,o=rx /etc/init.d/sonar

    - name: Start sonarqube
      ansible.builtin.service:
        name: sonar
        state: started

    - name: enable sonarqube service
      ansible.builtin.service:
        name: sonar
        enabled: yes

    - name: get sonar-scanner-cli
      get_url:
        url="https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.5.0.2216-linux.zip"
        dest="/tmp/sonar-scanner-cli-4.5.0.2216-linux.zip"

    - name: unzip sonar-scanner-cli
      ansible.builtin.unarchive:
        src: /tmp/sonar-scanner-cli-4.5.0.2216-linux.zip
        dest: /tmp
        remote_src: yes 
    
    - name: Copy sonar-scanner-cli to /opt
      ansible.builtin.copy:
        src: /tmp/sonar-scanner-4.5.0.2216-linux
        dest: /opt/sonar-scanner
        remote_src: yes

    - name: Test for line
      shell: grep -c "^sonar-scanner" ~/.bashrc || true
      register: test_grep

    - name: add sonar-scanner to path
      lineinfile:
        dest: ~/.bashrc
        line: export PATH=$PATH:/opt/sonar-scanner/bin 
      when: test_grep.stdout == "0"
    
